class Solution {
public:
    int compareVersion(string v1, string v2) {
        
        int i=0,j=0,n= v1.length(),m= v2.length();
        while(i<n || j<m)
        {
            string temp1,temp2;
                while(i<n && v1[i]!='.')
                {
                    temp1.push_back(v1[i]);
                    i++;
                }
            
               while(j<m && v2[j]!='.')
               {
                temp2.push_back(v2[j]);
                j++;
                }
            i++;
            j++;
            
           int k=0,h=0;
            while(k<temp1.length() && temp1[k]=='0') k++;
            while(h<temp2.length() && temp2[h]=='0') h++;
            
            if (k==temp1.length())  temp1="0";
            else   temp1= temp1.substr(k,temp1.length()-k);
            
            if(h==temp2.length())   temp2= "0";
            else   temp2= temp2.substr(h,temp2.length()-h);
            
            
           // cout<< temp1<<' '<<temp2<<' ';
            
            if (temp1.length()> temp2.length())   return 1;
            if (temp2.length()> temp1.length())  return -1;
            if (temp1> temp2)   return 1;
            else if (temp2> temp1)  return -1;
            
            
        }
        return 0;
    }
};
